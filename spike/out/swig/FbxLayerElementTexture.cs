//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxLayerElementTexture : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxLayerElementTexture(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxLayerElementTexture obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxLayerElementTexture() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxLayerElementTexture(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static FbxLayerElementTexture Create(FbxLayerContainer pOwner, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxLayerElementTexture_Create(FbxLayerContainer.getCPtr(pOwner), pName);
    FbxLayerElementTexture ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLayerElementTexture(cPtr, false);
    return ret;
  }

  public void SetBlendMode(FbxLayerElementTexture.EBlendMode pBlendMode) {
    examplePINVOKE.FbxLayerElementTexture_SetBlendMode(swigCPtr, (int)pBlendMode);
  }

  public void SetAlpha(double pAlpha) {
    examplePINVOKE.FbxLayerElementTexture_SetAlpha(swigCPtr, pAlpha);
  }

  public FbxLayerElementTexture.EBlendMode GetBlendMode() {
    FbxLayerElementTexture.EBlendMode ret = (FbxLayerElementTexture.EBlendMode)examplePINVOKE.FbxLayerElementTexture_GetBlendMode(swigCPtr);
    return ret;
  }

  public double GetAlpha() {
    double ret = examplePINVOKE.FbxLayerElementTexture_GetAlpha(swigCPtr);
    return ret;
  }

  public virtual int MemorySize() {
    int ret = examplePINVOKE.FbxLayerElementTexture_MemorySize(swigCPtr);
    return ret;
  }

  public enum EBlendMode {
    eTranslucent,
    eAdd,
    eModulate,
    eModulate2,
    eOver,
    eNormal,
    eDissolve,
    eDarken,
    eColorBurn,
    eLinearBurn,
    eDarkerColor,
    eLighten,
    eScreen,
    eColorDodge,
    eLinearDodge,
    eLighterColor,
    eSoftLight,
    eHardLight,
    eVividLight,
    eLinearLight,
    ePinLight,
    eHardMix,
    eDifference,
    eExclusion,
    eSubtract,
    eDivide,
    eHue,
    eSaturation,
    eColor,
    eLuminosity,
    eOverlay,
    eBlendModeCount
  }

}

}
