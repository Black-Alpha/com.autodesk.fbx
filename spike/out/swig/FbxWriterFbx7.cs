//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxWriterFbx7 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxWriterFbx7(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxWriterFbx7 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxWriterFbx7() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxWriterFbx7(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxWriterFbx7(FbxManager pManager, FbxExporter pExporter, int pID, FbxStatus pStatus) : this(examplePINVOKE.new_FbxWriterFbx7__SWIG_0(FbxManager.getCPtr(pManager), FbxExporter.getCPtr(pExporter), pID, FbxStatus.getCPtr(pStatus)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxWriterFbx7(FbxManager pManager, FbxExporter pExporter, FbxWriterFbx7.EExportMode pMode, int pID, FbxStatus pStatus) : this(examplePINVOKE.new_FbxWriterFbx7__SWIG_1(FbxManager.getCPtr(pManager), FbxExporter.getCPtr(pExporter), (int)pMode, pID, FbxStatus.getCPtr(pStatus)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool FileCreate(string pFileName) {
    bool ret = examplePINVOKE.FbxWriterFbx7_FileCreate__SWIG_0(swigCPtr, pFileName);
    return ret;
  }

  public virtual bool FileCreate(FbxStream pStream, SWIGTYPE_p_void pStreamData) {
    bool ret = examplePINVOKE.FbxWriterFbx7_FileCreate__SWIG_1(swigCPtr, FbxStream.getCPtr(pStream), SWIGTYPE_p_void.getCPtr(pStreamData));
    return ret;
  }

  public virtual bool FileClose() {
    bool ret = examplePINVOKE.FbxWriterFbx7_FileClose(swigCPtr);
    return ret;
  }

  public virtual bool IsFileOpen() {
    bool ret = examplePINVOKE.FbxWriterFbx7_IsFileOpen(swigCPtr);
    return ret;
  }

  public virtual void GetWriteOptions() {
    examplePINVOKE.FbxWriterFbx7_GetWriteOptions(swigCPtr);
  }

  public virtual bool Write(FbxDocument pDocument) {
    bool ret = examplePINVOKE.FbxWriterFbx7_Write__SWIG_0(swigCPtr, FbxDocument.getCPtr(pDocument));
    return ret;
  }

  public virtual bool PreprocessScene(FbxScene pScene) {
    bool ret = examplePINVOKE.FbxWriterFbx7_PreprocessScene(swigCPtr, FbxScene.getCPtr(pScene));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool PostprocessScene(FbxScene pScene) {
    bool ret = examplePINVOKE.FbxWriterFbx7_PostprocessScene(swigCPtr, FbxScene.getCPtr(pScene));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Write(FbxDocument pDocument, FbxIO pFbx) {
    bool ret = examplePINVOKE.FbxWriterFbx7_Write__SWIG_1(swigCPtr, FbxDocument.getCPtr(pDocument), FbxIO.getCPtr(pFbx));
    return ret;
  }

  public virtual void PluginWriteParameters(FbxObject pParams) {
    examplePINVOKE.FbxWriterFbx7_PluginWriteParameters(swigCPtr, FbxObject.getCPtr(pParams));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetProgressHandler(FbxProgress pProgress) {
    examplePINVOKE.FbxWriterFbx7_SetProgressHandler(swigCPtr, FbxProgress.getCPtr(pProgress));
  }

  public void SetExportMode(FbxWriterFbx7.EExportMode pMode) {
    examplePINVOKE.FbxWriterFbx7_SetExportMode(swigCPtr, (int)pMode);
  }

  public virtual bool SupportsStreams() {
    bool ret = examplePINVOKE.FbxWriterFbx7_SupportsStreams(swigCPtr);
    return ret;
  }

  public enum EExportMode {
    eASCII,
    eBINARY,
    eENCRYPTED
  }

}

}
