//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxCluster : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxCluster(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxCluster obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static FbxClassId ClassId {
    set {
      examplePINVOKE.FbxCluster_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public virtual FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(examplePINVOKE.FbxCluster_GetClassId(swigCPtr), true);
    return ret;
  }

  public static FbxCluster Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxCluster ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCluster(cPtr, false);
    return ret;
  }

  public static FbxCluster Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxCluster ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCluster(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_EType GetSubDeformerType() {
    SWIGTYPE_p_EType ret = new SWIGTYPE_p_EType(examplePINVOKE.FbxCluster_GetSubDeformerType(swigCPtr), true);
    return ret;
  }

  public void Reset() {
    examplePINVOKE.FbxCluster_Reset(swigCPtr);
  }

  public void SetLinkMode(FbxCluster.ELinkMode pMode) {
    examplePINVOKE.FbxCluster_SetLinkMode(swigCPtr, (int)pMode);
  }

  public FbxCluster.ELinkMode GetLinkMode() {
    FbxCluster.ELinkMode ret = (FbxCluster.ELinkMode)examplePINVOKE.FbxCluster_GetLinkMode(swigCPtr);
    return ret;
  }

  public void SetLink(FbxNode pNode) {
    examplePINVOKE.FbxCluster_SetLink(swigCPtr, FbxNode.getCPtr(pNode));
  }

  public FbxNode GetLink() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_GetLink__SWIG_0(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public void SetAssociateModel(FbxNode pNode) {
    examplePINVOKE.FbxCluster_SetAssociateModel(swigCPtr, FbxNode.getCPtr(pNode));
  }

  public FbxNode GetAssociateModel() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_GetAssociateModel(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public void AddControlPointIndex(int pIndex, double pWeight) {
    examplePINVOKE.FbxCluster_AddControlPointIndex(swigCPtr, pIndex, pWeight);
  }

  public int GetControlPointIndicesCount() {
    int ret = examplePINVOKE.FbxCluster_GetControlPointIndicesCount(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_int GetControlPointIndices() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_GetControlPointIndices(swigCPtr);
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_double GetControlPointWeights() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_GetControlPointWeights(swigCPtr);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public void SetControlPointIWCount(int pCount) {
    examplePINVOKE.FbxCluster_SetControlPointIWCount(swigCPtr, pCount);
  }

  public void SetTransformMatrix(FbxAMatrix pMatrix) {
    examplePINVOKE.FbxCluster_SetTransformMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAMatrix GetTransformMatrix(FbxAMatrix pMatrix) {
    FbxAMatrix ret = new FbxAMatrix(examplePINVOKE.FbxCluster_GetTransformMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix)), false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetTransformLinkMatrix(FbxAMatrix pMatrix) {
    examplePINVOKE.FbxCluster_SetTransformLinkMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAMatrix GetTransformLinkMatrix(FbxAMatrix pMatrix) {
    FbxAMatrix ret = new FbxAMatrix(examplePINVOKE.FbxCluster_GetTransformLinkMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix)), false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetTransformAssociateModelMatrix(FbxAMatrix pMatrix) {
    examplePINVOKE.FbxCluster_SetTransformAssociateModelMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAMatrix GetTransformAssociateModelMatrix(FbxAMatrix pMatrix) {
    FbxAMatrix ret = new FbxAMatrix(examplePINVOKE.FbxCluster_GetTransformAssociateModelMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix)), false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetTransformParentMatrix(FbxAMatrix pMatrix) {
    examplePINVOKE.FbxCluster_SetTransformParentMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAMatrix GetTransformParentMatrix(FbxAMatrix pMatrix) {
    FbxAMatrix ret = new FbxAMatrix(examplePINVOKE.FbxCluster_GetTransformParentMatrix(swigCPtr, FbxAMatrix.getCPtr(pMatrix)), false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsTransformParentSet() {
    bool ret = examplePINVOKE.FbxCluster_IsTransformParentSet(swigCPtr);
    return ret;
  }

  public virtual FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(examplePINVOKE.FbxCluster_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetUserData(string pUserDataID, string pUserData) {
    examplePINVOKE.FbxCluster_SetUserData(swigCPtr, pUserDataID, pUserData);
  }

  public string GetUserDataID() {
    string ret = examplePINVOKE.FbxCluster_GetUserDataID(swigCPtr);
    return ret;
  }

  public string GetUserData() {
    string ret = examplePINVOKE.FbxCluster_GetUserData__SWIG_0(swigCPtr);
    return ret;
  }

  public string GetUserData(string pUserDataID) {
    string ret = examplePINVOKE.FbxCluster_GetUserData__SWIG_1(swigCPtr, pUserDataID);
    return ret;
  }

  public FbxString mBeforeVersion6LinkName {
    set {
      examplePINVOKE.FbxCluster_mBeforeVersion6LinkName_set(swigCPtr, FbxString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_mBeforeVersion6LinkName_get(swigCPtr);
      FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
      return ret;
    } 
  }

  public FbxString mBeforeVersion6AssociateModelName {
    set {
      examplePINVOKE.FbxCluster_mBeforeVersion6AssociateModelName_set(swigCPtr, FbxString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCluster_mBeforeVersion6AssociateModelName_get(swigCPtr);
      FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
      return ret;
    } 
  }

  public enum ELinkMode {
    eNormalize,
    eAdditive,
    eTotalOne
  }

}

}
