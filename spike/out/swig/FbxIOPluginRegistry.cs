//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxIOPluginRegistry : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxIOPluginRegistry(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxIOPluginRegistry obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxIOPluginRegistry() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxIOPluginRegistry(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxIOPluginRegistry() : this(examplePINVOKE.new_FbxIOPluginRegistry(), true) {
  }

  public void RegisterReader(string pPluginPath, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount, bool pOverride) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterReader__SWIG_0(swigCPtr, pPluginPath, SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount), pOverride);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterReader(string pPluginPath, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterReader__SWIG_1(swigCPtr, pPluginPath, SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterReader(SWIGTYPE_p_f_r_FbxManager_r_FbxImporter_int_int__p_FbxReader pCreateF, SWIGTYPE_p_f_enum_FbxReader__EInfoRequest_int__p_void pInfoF, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount, SWIGTYPE_p_f_r_FbxIOSettings__void pIOSettingsFillerF, bool pOverride) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterReader__SWIG_2(swigCPtr, SWIGTYPE_p_f_r_FbxManager_r_FbxImporter_int_int__p_FbxReader.getCPtr(pCreateF), SWIGTYPE_p_f_enum_FbxReader__EInfoRequest_int__p_void.getCPtr(pInfoF), SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount), SWIGTYPE_p_f_r_FbxIOSettings__void.getCPtr(pIOSettingsFillerF), pOverride);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterReader(SWIGTYPE_p_f_r_FbxManager_r_FbxImporter_int_int__p_FbxReader pCreateF, SWIGTYPE_p_f_enum_FbxReader__EInfoRequest_int__p_void pInfoF, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount, SWIGTYPE_p_f_r_FbxIOSettings__void pIOSettingsFillerF) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterReader__SWIG_3(swigCPtr, SWIGTYPE_p_f_r_FbxManager_r_FbxImporter_int_int__p_FbxReader.getCPtr(pCreateF), SWIGTYPE_p_f_enum_FbxReader__EInfoRequest_int__p_void.getCPtr(pInfoF), SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount), SWIGTYPE_p_f_r_FbxIOSettings__void.getCPtr(pIOSettingsFillerF));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterReader(SWIGTYPE_p_f_r_FbxManager_r_FbxImporter_int_int__p_FbxReader pCreateF, SWIGTYPE_p_f_enum_FbxReader__EInfoRequest_int__p_void pInfoF, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterReader__SWIG_4(swigCPtr, SWIGTYPE_p_f_r_FbxManager_r_FbxImporter_int_int__p_FbxReader.getCPtr(pCreateF), SWIGTYPE_p_f_enum_FbxReader__EInfoRequest_int__p_void.getCPtr(pInfoF), SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterWriter(string pPluginPath, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount, bool pOverride) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterWriter__SWIG_0(swigCPtr, pPluginPath, SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount), pOverride);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterWriter(string pPluginPath, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterWriter__SWIG_1(swigCPtr, pPluginPath, SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterWriter(SWIGTYPE_p_f_r_FbxManager_r_FbxExporter_int_int__p_FbxWriter pCreateF, SWIGTYPE_p_f_enum_FbxWriter__EInfoRequest_int__p_void pInfoF, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount, SWIGTYPE_p_f_r_FbxIOSettings__void pIOSettingsFillerF, bool pOverride) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterWriter__SWIG_2(swigCPtr, SWIGTYPE_p_f_r_FbxManager_r_FbxExporter_int_int__p_FbxWriter.getCPtr(pCreateF), SWIGTYPE_p_f_enum_FbxWriter__EInfoRequest_int__p_void.getCPtr(pInfoF), SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount), SWIGTYPE_p_f_r_FbxIOSettings__void.getCPtr(pIOSettingsFillerF), pOverride);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterWriter(SWIGTYPE_p_f_r_FbxManager_r_FbxExporter_int_int__p_FbxWriter pCreateF, SWIGTYPE_p_f_enum_FbxWriter__EInfoRequest_int__p_void pInfoF, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount, SWIGTYPE_p_f_r_FbxIOSettings__void pIOSettingsFillerF) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterWriter__SWIG_3(swigCPtr, SWIGTYPE_p_f_r_FbxManager_r_FbxExporter_int_int__p_FbxWriter.getCPtr(pCreateF), SWIGTYPE_p_f_enum_FbxWriter__EInfoRequest_int__p_void.getCPtr(pInfoF), SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount), SWIGTYPE_p_f_r_FbxIOSettings__void.getCPtr(pIOSettingsFillerF));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void RegisterWriter(SWIGTYPE_p_f_r_FbxManager_r_FbxExporter_int_int__p_FbxWriter pCreateF, SWIGTYPE_p_f_enum_FbxWriter__EInfoRequest_int__p_void pInfoF, SWIGTYPE_p_int pFirstPluginID, SWIGTYPE_p_int pRegisteredCount) {
    examplePINVOKE.FbxIOPluginRegistry_RegisterWriter__SWIG_4(swigCPtr, SWIGTYPE_p_f_r_FbxManager_r_FbxExporter_int_int__p_FbxWriter.getCPtr(pCreateF), SWIGTYPE_p_f_enum_FbxWriter__EInfoRequest_int__p_void.getCPtr(pInfoF), SWIGTYPE_p_int.getCPtr(pFirstPluginID), SWIGTYPE_p_int.getCPtr(pRegisteredCount));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxReader CreateReader(FbxManager pManager, FbxImporter pImporter, int pPluginID) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxIOPluginRegistry_CreateReader(swigCPtr, FbxManager.getCPtr(pManager), FbxImporter.getCPtr(pImporter), pPluginID);
    FbxReader ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxReader(cPtr, false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxWriter CreateWriter(FbxManager pManager, FbxExporter pExporter, int pPluginID) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxIOPluginRegistry_CreateWriter(swigCPtr, FbxManager.getCPtr(pManager), FbxExporter.getCPtr(pExporter), pPluginID);
    FbxWriter ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxWriter(cPtr, false);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int FindReaderIDByExtension(string pExt) {
    int ret = examplePINVOKE.FbxIOPluginRegistry_FindReaderIDByExtension(swigCPtr, pExt);
    return ret;
  }

  public int FindWriterIDByExtension(string pExt) {
    int ret = examplePINVOKE.FbxIOPluginRegistry_FindWriterIDByExtension(swigCPtr, pExt);
    return ret;
  }

  public int FindReaderIDByDescription(string pDesc) {
    int ret = examplePINVOKE.FbxIOPluginRegistry_FindReaderIDByDescription(swigCPtr, pDesc);
    return ret;
  }

  public int FindWriterIDByDescription(string pDesc) {
    int ret = examplePINVOKE.FbxIOPluginRegistry_FindWriterIDByDescription(swigCPtr, pDesc);
    return ret;
  }

  public bool ReaderIsFBX(int pFileFormat) {
    bool ret = examplePINVOKE.FbxIOPluginRegistry_ReaderIsFBX(swigCPtr, pFileFormat);
    return ret;
  }

  public bool WriterIsFBX(int pFileFormat) {
    bool ret = examplePINVOKE.FbxIOPluginRegistry_WriterIsFBX(swigCPtr, pFileFormat);
    return ret;
  }

  public bool ReaderIsGenuine(int pFileFormat) {
    bool ret = examplePINVOKE.FbxIOPluginRegistry_ReaderIsGenuine(swigCPtr, pFileFormat);
    return ret;
  }

  public bool WriterIsGenuine(int pFileFormat) {
    bool ret = examplePINVOKE.FbxIOPluginRegistry_WriterIsGenuine(swigCPtr, pFileFormat);
    return ret;
  }

  public int GetReaderFormatCount() {
    int ret = examplePINVOKE.FbxIOPluginRegistry_GetReaderFormatCount(swigCPtr);
    return ret;
  }

  public int GetWriterFormatCount() {
    int ret = examplePINVOKE.FbxIOPluginRegistry_GetWriterFormatCount(swigCPtr);
    return ret;
  }

  public string GetReaderFormatDescription(int pFileFormat) {
    string ret = examplePINVOKE.FbxIOPluginRegistry_GetReaderFormatDescription(swigCPtr, pFileFormat);
    return ret;
  }

  public string GetWriterFormatDescription(int pFileFormat) {
    string ret = examplePINVOKE.FbxIOPluginRegistry_GetWriterFormatDescription(swigCPtr, pFileFormat);
    return ret;
  }

  public string GetReaderFormatExtension(int pFileFormat) {
    string ret = examplePINVOKE.FbxIOPluginRegistry_GetReaderFormatExtension(swigCPtr, pFileFormat);
    return ret;
  }

  public string GetWriterFormatExtension(int pFileFormat) {
    string ret = examplePINVOKE.FbxIOPluginRegistry_GetWriterFormatExtension(swigCPtr, pFileFormat);
    return ret;
  }

  public SWIGTYPE_p_p_char GetWritableVersions(int pFileFormat) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxIOPluginRegistry_GetWritableVersions(swigCPtr, pFileFormat);
    SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
    return ret;
  }

  public bool DetectReaderFileFormat(string pFileName, SWIGTYPE_p_int pFileFormat) {
    bool ret = examplePINVOKE.FbxIOPluginRegistry_DetectReaderFileFormat(swigCPtr, pFileName, SWIGTYPE_p_int.getCPtr(pFileFormat));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool DetectWriterFileFormat(string pFileName, SWIGTYPE_p_int pFileFormat) {
    bool ret = examplePINVOKE.FbxIOPluginRegistry_DetectWriterFileFormat(swigCPtr, pFileName, SWIGTYPE_p_int.getCPtr(pFileFormat));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetNativeReaderFormat() {
    int ret = examplePINVOKE.FbxIOPluginRegistry_GetNativeReaderFormat(swigCPtr);
    return ret;
  }

  public int GetNativeWriterFormat() {
    int ret = examplePINVOKE.FbxIOPluginRegistry_GetNativeWriterFormat(swigCPtr);
    return ret;
  }

  public void FillIOSettingsForReadersRegistered(FbxIOSettings pIOS) {
    examplePINVOKE.FbxIOPluginRegistry_FillIOSettingsForReadersRegistered(swigCPtr, FbxIOSettings.getCPtr(pIOS));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void FillIOSettingsForWritersRegistered(FbxIOSettings pIOS) {
    examplePINVOKE.FbxIOPluginRegistry_FillIOSettingsForWritersRegistered(swigCPtr, FbxIOSettings.getCPtr(pIOS));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

}

}
