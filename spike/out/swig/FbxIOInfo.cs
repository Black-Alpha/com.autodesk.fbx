//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxIOInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxIOInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxIOInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxIOInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxIOInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxIOInfo() : this(examplePINVOKE.new_FbxIOInfo(), true) {
  }

  public void Reset(FbxIOInfo.EImpExp pImpExp) {
    examplePINVOKE.FbxIOInfo_Reset(swigCPtr, (int)pImpExp);
  }

  public void SetTimeMode(FbxTime.EMode pTimeMode, double pCustomFrameRate) {
    examplePINVOKE.FbxIOInfo_SetTimeMode__SWIG_0(swigCPtr, (int)pTimeMode, pCustomFrameRate);
  }

  public void SetTimeMode(FbxTime.EMode pTimeMode) {
    examplePINVOKE.FbxIOInfo_SetTimeMode__SWIG_1(swigCPtr, (int)pTimeMode);
  }

  public FbxTime.EMode GetTimeMode() {
    FbxTime.EMode ret = (FbxTime.EMode)examplePINVOKE.FbxIOInfo_GetTimeMode(swigCPtr);
    return ret;
  }

  public FbxTime GetFramePeriod() {
    FbxTime ret = new FbxTime(examplePINVOKE.FbxIOInfo_GetFramePeriod(swigCPtr), true);
    return ret;
  }

  public void SetASFScene(FbxObject pASFScene, bool pASFSceneOwned) {
    examplePINVOKE.FbxIOInfo_SetASFScene__SWIG_0(swigCPtr, FbxObject.getCPtr(pASFScene), pASFSceneOwned);
  }

  public void SetASFScene(FbxObject pASFScene) {
    examplePINVOKE.FbxIOInfo_SetASFScene__SWIG_1(swigCPtr, FbxObject.getCPtr(pASFScene));
  }

  public FbxObject GetASFScene() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxIOInfo_GetASFScene(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public void Set_IOS(FbxIOSettings pIOS) {
    examplePINVOKE.FbxIOInfo_Set_IOS(swigCPtr, FbxIOSettings.getCPtr(pIOS));
  }

  public void SetImportExportMode(FbxIOInfo.EImpExp pImpExp) {
    examplePINVOKE.FbxIOInfo_SetImportExportMode(swigCPtr, (int)pImpExp);
  }

  public enum EImpExp {
    eImport,
    eExport
  }

}

}
