//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxAnimCurveKey : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxAnimCurveKey(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAnimCurveKey obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAnimCurveKey() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxAnimCurveKey(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxAnimCurveKey() : this(examplePINVOKE.new_FbxAnimCurveKey__SWIG_0(), true) {
  }

  public FbxAnimCurveKey(FbxTime pTime) : this(examplePINVOKE.new_FbxAnimCurveKey__SWIG_1(FbxTime.getCPtr(pTime)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAnimCurveKey(FbxTime pTime, float pVal) : this(examplePINVOKE.new_FbxAnimCurveKey__SWIG_2(FbxTime.getCPtr(pTime), pVal), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAnimCurveKey(FbxAnimCurveKey pFKey) : this(examplePINVOKE.new_FbxAnimCurveKey__SWIG_3(FbxAnimCurveKey.getCPtr(pFKey)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxTime GetTime() {
    FbxTime ret = new FbxTime(examplePINVOKE.FbxAnimCurveKey_GetTime(swigCPtr), true);
    return ret;
  }

  public void SetTime(FbxTime pTime) {
    examplePINVOKE.FbxAnimCurveKey_SetTime(swigCPtr, FbxTime.getCPtr(pTime));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Set(FbxTime pTime, float pValue) {
    examplePINVOKE.FbxAnimCurveKey_Set(swigCPtr, FbxTime.getCPtr(pTime), pValue);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTCB(FbxTime pTime, float pValue, float pData0, float pData1, float pData2) {
    examplePINVOKE.FbxAnimCurveKey_SetTCB__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime), pValue, pData0, pData1, pData2);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTCB(FbxTime pTime, float pValue, float pData0, float pData1) {
    examplePINVOKE.FbxAnimCurveKey_SetTCB__SWIG_1(swigCPtr, FbxTime.getCPtr(pTime), pValue, pData0, pData1);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTCB(FbxTime pTime, float pValue, float pData0) {
    examplePINVOKE.FbxAnimCurveKey_SetTCB__SWIG_2(swigCPtr, FbxTime.getCPtr(pTime), pValue, pData0);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTCB(FbxTime pTime, float pValue) {
    examplePINVOKE.FbxAnimCurveKey_SetTCB__SWIG_3(swigCPtr, FbxTime.getCPtr(pTime), pValue);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetValue() {
    float ret = examplePINVOKE.FbxAnimCurveKey_GetValue(swigCPtr);
    return ret;
  }

  public void SetValue(float pValue) {
    examplePINVOKE.FbxAnimCurveKey_SetValue(swigCPtr, pValue);
  }

  public FbxAnimCurveDef.EInterpolationType GetInterpolation() {
    FbxAnimCurveDef.EInterpolationType ret = (FbxAnimCurveDef.EInterpolationType)examplePINVOKE.FbxAnimCurveKey_GetInterpolation(swigCPtr);
    return ret;
  }

  public void SetInterpolation(FbxAnimCurveDef.EInterpolationType pInterpolation) {
    examplePINVOKE.FbxAnimCurveKey_SetInterpolation(swigCPtr, (int)pInterpolation);
  }

  public FbxAnimCurveDef.ETangentMode GetTangentMode(bool pIncludeOverrides) {
    FbxAnimCurveDef.ETangentMode ret = (FbxAnimCurveDef.ETangentMode)examplePINVOKE.FbxAnimCurveKey_GetTangentMode__SWIG_0(swigCPtr, pIncludeOverrides);
    return ret;
  }

  public FbxAnimCurveDef.ETangentMode GetTangentMode() {
    FbxAnimCurveDef.ETangentMode ret = (FbxAnimCurveDef.ETangentMode)examplePINVOKE.FbxAnimCurveKey_GetTangentMode__SWIG_1(swigCPtr);
    return ret;
  }

  public void SetTangentMode(FbxAnimCurveDef.ETangentMode pTangentMode) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentMode(swigCPtr, (int)pTangentMode);
  }

  public FbxAnimCurveDef.EWeightedMode GetTangentWeightMode() {
    FbxAnimCurveDef.EWeightedMode ret = (FbxAnimCurveDef.EWeightedMode)examplePINVOKE.FbxAnimCurveKey_GetTangentWeightMode(swigCPtr);
    return ret;
  }

  public void SetTangentWeightMode(FbxAnimCurveDef.EWeightedMode pTangentWeightMode, FbxAnimCurveDef.EWeightedMode pMask) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentWeightMode__SWIG_0(swigCPtr, (int)pTangentWeightMode, (int)pMask);
  }

  public void SetTangentWeightMode(FbxAnimCurveDef.EWeightedMode pTangentWeightMode) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentWeightMode__SWIG_1(swigCPtr, (int)pTangentWeightMode);
  }

  public void SetTangentWeightAndAdjustTangent(FbxAnimCurveDef.EDataIndex pIndex, double pWeight) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentWeightAndAdjustTangent(swigCPtr, (int)pIndex, pWeight);
  }

  public FbxAnimCurveDef.EVelocityMode GetTangentVelocityMode() {
    FbxAnimCurveDef.EVelocityMode ret = (FbxAnimCurveDef.EVelocityMode)examplePINVOKE.FbxAnimCurveKey_GetTangentVelocityMode(swigCPtr);
    return ret;
  }

  public void SetTangentVelocityMode(FbxAnimCurveDef.EVelocityMode pTangentVelocityMode, FbxAnimCurveDef.EVelocityMode pMask) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentVelocityMode__SWIG_0(swigCPtr, (int)pTangentVelocityMode, (int)pMask);
  }

  public void SetTangentVelocityMode(FbxAnimCurveDef.EVelocityMode pTangentVelocityMode) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentVelocityMode__SWIG_1(swigCPtr, (int)pTangentVelocityMode);
  }

  public FbxAnimCurveDef.EConstantMode GetConstantMode() {
    FbxAnimCurveDef.EConstantMode ret = (FbxAnimCurveDef.EConstantMode)examplePINVOKE.FbxAnimCurveKey_GetConstantMode(swigCPtr);
    return ret;
  }

  public void SetConstantMode(FbxAnimCurveDef.EConstantMode pMode) {
    examplePINVOKE.FbxAnimCurveKey_SetConstantMode(swigCPtr, (int)pMode);
  }

  public float GetDataFloat(FbxAnimCurveDef.EDataIndex pIndex) {
    float ret = examplePINVOKE.FbxAnimCurveKey_GetDataFloat(swigCPtr, (int)pIndex);
    return ret;
  }

  public void SetDataFloat(FbxAnimCurveDef.EDataIndex pIndex, float pValue) {
    examplePINVOKE.FbxAnimCurveKey_SetDataFloat(swigCPtr, (int)pIndex, pValue);
  }

  public void SetTangentVisibility(FbxAnimCurveDef.ETangentVisibility pVisibility) {
    examplePINVOKE.FbxAnimCurveKey_SetTangentVisibility(swigCPtr, (int)pVisibility);
  }

  public FbxAnimCurveDef.ETangentVisibility GetTangentVisibility() {
    FbxAnimCurveDef.ETangentVisibility ret = (FbxAnimCurveDef.ETangentVisibility)examplePINVOKE.FbxAnimCurveKey_GetTangentVisibility(swigCPtr);
    return ret;
  }

  public void SetBreak(bool pVal) {
    examplePINVOKE.FbxAnimCurveKey_SetBreak(swigCPtr, pVal);
  }

  public bool GetBreak() {
    bool ret = examplePINVOKE.FbxAnimCurveKey_GetBreak(swigCPtr);
    return ret;
  }

  public FbxAnimCurveKey_Impl GetImpl() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxAnimCurveKey_GetImpl(swigCPtr);
    FbxAnimCurveKey_Impl ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAnimCurveKey_Impl(cPtr, false);
    return ret;
  }

  public static void SetAllocatorFct(SWIGTYPE_p_f___p_FbxAnimCurveKey_Impl pAllocatorFct) {
    examplePINVOKE.FbxAnimCurveKey_SetAllocatorFct(SWIGTYPE_p_f___p_FbxAnimCurveKey_Impl.getCPtr(pAllocatorFct));
  }

  public static void SetCopyAllocatorFct(SWIGTYPE_p_f_p_FbxAnimCurveKey_Impl__p_FbxAnimCurveKey_Impl pCopyAllocatorFct) {
    examplePINVOKE.FbxAnimCurveKey_SetCopyAllocatorFct(SWIGTYPE_p_f_p_FbxAnimCurveKey_Impl__p_FbxAnimCurveKey_Impl.getCPtr(pCopyAllocatorFct));
  }

  public static void SetDeallocatorFct(SWIGTYPE_p_f_p_FbxAnimCurveKey_Impl__void pDeallocatorFct) {
    examplePINVOKE.FbxAnimCurveKey_SetDeallocatorFct(SWIGTYPE_p_f_p_FbxAnimCurveKey_Impl__void.getCPtr(pDeallocatorFct));
  }

}

}
