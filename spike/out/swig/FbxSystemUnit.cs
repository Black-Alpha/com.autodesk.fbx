//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxSystemUnit : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxSystemUnit(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxSystemUnit obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxSystemUnit() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxSystemUnit(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public class ConversionOptions : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal ConversionOptions(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ConversionOptions obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~ConversionOptions() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            examplePINVOKE.delete_FbxSystemUnit_ConversionOptions(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public bool mConvertRrsNodes {
      set {
        examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertRrsNodes_set(swigCPtr, value);
      } 
      get {
        bool ret = examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertRrsNodes_get(swigCPtr);
        return ret;
      } 
    }
  
    public bool mConvertLimits {
      set {
        examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertLimits_set(swigCPtr, value);
      } 
      get {
        bool ret = examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertLimits_get(swigCPtr);
        return ret;
      } 
    }
  
    public bool mConvertClusters {
      set {
        examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertClusters_set(swigCPtr, value);
      } 
      get {
        bool ret = examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertClusters_get(swigCPtr);
        return ret;
      } 
    }
  
    public bool mConvertLightIntensity {
      set {
        examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertLightIntensity_set(swigCPtr, value);
      } 
      get {
        bool ret = examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertLightIntensity_get(swigCPtr);
        return ret;
      } 
    }
  
    public bool mConvertPhotometricLProperties {
      set {
        examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertPhotometricLProperties_set(swigCPtr, value);
      } 
      get {
        bool ret = examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertPhotometricLProperties_get(swigCPtr);
        return ret;
      } 
    }
  
    public bool mConvertCameraClipPlanes {
      set {
        examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertCameraClipPlanes_set(swigCPtr, value);
      } 
      get {
        bool ret = examplePINVOKE.FbxSystemUnit_ConversionOptions_mConvertCameraClipPlanes_get(swigCPtr);
        return ret;
      } 
    }
  
    public ConversionOptions() : this(examplePINVOKE.new_FbxSystemUnit_ConversionOptions(), true) {
    }
  
  }

  public FbxSystemUnit() : this(examplePINVOKE.new_FbxSystemUnit__SWIG_0(), true) {
  }

  public FbxSystemUnit(double pScaleFactor, double pMultiplier) : this(examplePINVOKE.new_FbxSystemUnit__SWIG_1(pScaleFactor, pMultiplier), true) {
  }

  public FbxSystemUnit(double pScaleFactor) : this(examplePINVOKE.new_FbxSystemUnit__SWIG_2(pScaleFactor), true) {
  }

  public static FbxSystemUnit mm {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_mm_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit dm {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_dm_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit cm {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_cm_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit m {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_m_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit km {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_km_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit Inch {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_Inch_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit Foot {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_Foot_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit Mile {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_Mile_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit Yard {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_Yard_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit sPredefinedUnits {
    set {
      examplePINVOKE.FbxSystemUnit_sPredefinedUnits_set(FbxSystemUnit.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_sPredefinedUnits_get();
      FbxSystemUnit ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit(cPtr, false);
      return ret;
    } 
  }

  public static FbxSystemUnit.ConversionOptions DefaultConversionOptions {
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxSystemUnit_DefaultConversionOptions_get();
      FbxSystemUnit.ConversionOptions ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSystemUnit.ConversionOptions(cPtr, false);
      return ret;
    } 
  }

  public void ConvertScene(FbxScene pScene, FbxSystemUnit.ConversionOptions pOptions) {
    examplePINVOKE.FbxSystemUnit_ConvertScene__SWIG_0(swigCPtr, FbxScene.getCPtr(pScene), FbxSystemUnit.ConversionOptions.getCPtr(pOptions));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void ConvertScene(FbxScene pScene) {
    examplePINVOKE.FbxSystemUnit_ConvertScene__SWIG_1(swigCPtr, FbxScene.getCPtr(pScene));
  }

  public void ConvertChildren(FbxNode pRoot, FbxSystemUnit pSrcUnit, FbxSystemUnit.ConversionOptions pOptions) {
    examplePINVOKE.FbxSystemUnit_ConvertChildren__SWIG_0(swigCPtr, FbxNode.getCPtr(pRoot), FbxSystemUnit.getCPtr(pSrcUnit), FbxSystemUnit.ConversionOptions.getCPtr(pOptions));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void ConvertChildren(FbxNode pRoot, FbxSystemUnit pSrcUnit) {
    examplePINVOKE.FbxSystemUnit_ConvertChildren__SWIG_1(swigCPtr, FbxNode.getCPtr(pRoot), FbxSystemUnit.getCPtr(pSrcUnit));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void ConvertScene(FbxScene pScene, FbxNode pFbxRoot, FbxSystemUnit.ConversionOptions pOptions) {
    examplePINVOKE.FbxSystemUnit_ConvertScene__SWIG_2(swigCPtr, FbxScene.getCPtr(pScene), FbxNode.getCPtr(pFbxRoot), FbxSystemUnit.ConversionOptions.getCPtr(pOptions));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void ConvertScene(FbxScene pScene, FbxNode pFbxRoot) {
    examplePINVOKE.FbxSystemUnit_ConvertScene__SWIG_3(swigCPtr, FbxScene.getCPtr(pScene), FbxNode.getCPtr(pFbxRoot));
  }

  public double GetScaleFactor() {
    double ret = examplePINVOKE.FbxSystemUnit_GetScaleFactor(swigCPtr);
    return ret;
  }

  public FbxString GetScaleFactorAsString(bool pAbbreviated) {
    FbxString ret = new FbxString(examplePINVOKE.FbxSystemUnit_GetScaleFactorAsString__SWIG_0(swigCPtr, pAbbreviated), true);
    return ret;
  }

  public FbxString GetScaleFactorAsString() {
    FbxString ret = new FbxString(examplePINVOKE.FbxSystemUnit_GetScaleFactorAsString__SWIG_1(swigCPtr), true);
    return ret;
  }

  public FbxString GetScaleFactorAsString_Plurial() {
    FbxString ret = new FbxString(examplePINVOKE.FbxSystemUnit_GetScaleFactorAsString_Plurial(swigCPtr), true);
    return ret;
  }

  public double GetMultiplier() {
    double ret = examplePINVOKE.FbxSystemUnit_GetMultiplier(swigCPtr);
    return ret;
  }

  public double GetConversionFactorTo(FbxSystemUnit pTarget) {
    double ret = examplePINVOKE.FbxSystemUnit_GetConversionFactorTo(swigCPtr, FbxSystemUnit.getCPtr(pTarget));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double GetConversionFactorFrom(FbxSystemUnit pSource) {
    double ret = examplePINVOKE.FbxSystemUnit_GetConversionFactorFrom(swigCPtr, FbxSystemUnit.getCPtr(pSource));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
