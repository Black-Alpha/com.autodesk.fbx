//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxCharacterLink : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxCharacterLink(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxCharacterLink obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxCharacterLink() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxCharacterLink(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxCharacterLink() : this(examplePINVOKE.new_FbxCharacterLink__SWIG_0(), true) {
  }

  public FbxCharacterLink(FbxCharacterLink pCharacterLink) : this(examplePINVOKE.new_FbxCharacterLink__SWIG_1(FbxCharacterLink.getCPtr(pCharacterLink)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Reset() {
    examplePINVOKE.FbxCharacterLink_Reset(swigCPtr);
  }

  public FbxNode mNode {
    set {
      examplePINVOKE.FbxCharacterLink_mNode_set(swigCPtr, FbxNode.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mNode_get(swigCPtr);
      FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
      return ret;
    } 
  }

  public FbxString mTemplateName {
    set {
      examplePINVOKE.FbxCharacterLink_mTemplateName_set(swigCPtr, FbxString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mTemplateName_get(swigCPtr);
      FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
      return ret;
    } 
  }

  public FbxVector4 mOffsetT {
    set {
      examplePINVOKE.FbxCharacterLink_mOffsetT_set(swigCPtr, FbxVector4.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mOffsetT_get(swigCPtr);
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public FbxVector4 mOffsetR {
    set {
      examplePINVOKE.FbxCharacterLink_mOffsetR_set(swigCPtr, FbxVector4.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mOffsetR_get(swigCPtr);
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public FbxVector4 mOffsetS {
    set {
      examplePINVOKE.FbxCharacterLink_mOffsetS_set(swigCPtr, FbxVector4.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mOffsetS_get(swigCPtr);
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public FbxVector4 mParentROffset {
    set {
      examplePINVOKE.FbxCharacterLink_mParentROffset_set(swigCPtr, FbxVector4.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mParentROffset_get(swigCPtr);
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public bool mHasRotSpace {
    set {
      examplePINVOKE.FbxCharacterLink_mHasRotSpace_set(swigCPtr, value);
    } 
    get {
      bool ret = examplePINVOKE.FbxCharacterLink_mHasRotSpace_get(swigCPtr);
      return ret;
    } 
  }

  public FbxLimits mRLimits {
    set {
      examplePINVOKE.FbxCharacterLink_mRLimits_set(swigCPtr, FbxLimits.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mRLimits_get(swigCPtr);
      FbxLimits ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxLimits(cPtr, false);
      return ret;
    } 
  }

  public FbxVector4 mPreRotation {
    set {
      examplePINVOKE.FbxCharacterLink_mPreRotation_set(swigCPtr, FbxVector4.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPreRotation_get(swigCPtr);
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public FbxVector4 mPostRotation {
    set {
      examplePINVOKE.FbxCharacterLink_mPostRotation_set(swigCPtr, FbxVector4.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPostRotation_get(swigCPtr);
      FbxVector4 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVector4(cPtr, false);
      return ret;
    } 
  }

  public int mRotOrder {
    set {
      examplePINVOKE.FbxCharacterLink_mRotOrder_set(swigCPtr, value);
    } 
    get {
      int ret = examplePINVOKE.FbxCharacterLink_mRotOrder_get(swigCPtr);
      return ret;
    } 
  }

  public double mAxisLen {
    set {
      examplePINVOKE.FbxCharacterLink_mAxisLen_set(swigCPtr, value);
    } 
    get {
      double ret = examplePINVOKE.FbxCharacterLink_mAxisLen_get(swigCPtr);
      return ret;
    } 
  }

  public FbxProperty mPropertyLink {
    set {
      examplePINVOKE.FbxCharacterLink_mPropertyLink_set(swigCPtr, FbxProperty.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPropertyLink_get(swigCPtr);
      FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
      return ret;
    } 
  }

  public FbxProperty mPropertyOffsetT {
    set {
      examplePINVOKE.FbxCharacterLink_mPropertyOffsetT_set(swigCPtr, FbxProperty.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPropertyOffsetT_get(swigCPtr);
      FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
      return ret;
    } 
  }

  public FbxProperty mPropertyOffsetR {
    set {
      examplePINVOKE.FbxCharacterLink_mPropertyOffsetR_set(swigCPtr, FbxProperty.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPropertyOffsetR_get(swigCPtr);
      FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
      return ret;
    } 
  }

  public FbxProperty mPropertyOffsetS {
    set {
      examplePINVOKE.FbxCharacterLink_mPropertyOffsetS_set(swigCPtr, FbxProperty.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPropertyOffsetS_get(swigCPtr);
      FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
      return ret;
    } 
  }

  public FbxProperty mPropertyParentOffsetR {
    set {
      examplePINVOKE.FbxCharacterLink_mPropertyParentOffsetR_set(swigCPtr, FbxProperty.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPropertyParentOffsetR_get(swigCPtr);
      FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
      return ret;
    } 
  }

  public FbxProperty mPropertyTemplateName {
    set {
      examplePINVOKE.FbxCharacterLink_mPropertyTemplateName_set(swigCPtr, FbxProperty.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxCharacterLink_mPropertyTemplateName_get(swigCPtr);
      FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
      return ret;
    } 
  }

  public enum EType {
    eCharacterLink,
    eControlSetLink,
    eControlSetEffector,
    eControlSetEffectorAux
  }

}

}
