//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxContainer : FbxObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxContainer(global::System.IntPtr cPtr, bool cMemoryOwn) : base(examplePINVOKE.FbxContainer_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxContainer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      examplePINVOKE.FbxContainer_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(examplePINVOKE.FbxContainer_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxContainer Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxContainer ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxContainer(cPtr, false);
    return ret;
  }

  public new static FbxContainer Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxContainer ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxContainer(cPtr, false);
    return ret;
  }

  public FbxProperty CreateProperty(FbxString pName, FbxDataType pType, FbxString pLabel) {
    FbxProperty ret = new FbxProperty(examplePINVOKE.FbxContainer_CreateProperty(swigCPtr, FbxString.getCPtr(pName), FbxDataType.getCPtr(pType), FbxString.getCPtr(pLabel)), true);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxString_t TemplateName {
    set {
      examplePINVOKE.FbxContainer_TemplateName_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxString_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_TemplateName_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxString_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxString_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxString_t TemplatePath {
    set {
      examplePINVOKE.FbxContainer_TemplatePath_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxString_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_TemplatePath_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxString_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxString_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxString_t TemplateVersion {
    set {
      examplePINVOKE.FbxContainer_TemplateVersion_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxString_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_TemplateVersion_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxString_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxString_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxString_t ViewName {
    set {
      examplePINVOKE.FbxContainer_ViewName_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxString_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_ViewName_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxString_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxString_t(cPtr, false);
      return ret;
    } 
  }

  public FbxContainerTemplate mContainerTemplate {
    set {
      examplePINVOKE.FbxContainer_mContainerTemplate_set(swigCPtr, FbxContainerTemplate.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxContainer_mContainerTemplate_get(swigCPtr);
      FbxContainerTemplate ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxContainerTemplate(cPtr, false);
      return ret;
    } 
  }

}

}
