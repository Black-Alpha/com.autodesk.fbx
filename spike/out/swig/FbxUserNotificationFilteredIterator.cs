//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxUserNotificationFilteredIterator : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxUserNotificationFilteredIterator(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxUserNotificationFilteredIterator obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxUserNotificationFilteredIterator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxUserNotificationFilteredIterator(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxUserNotificationFilteredIterator(FbxUserNotification pAccumulator, int pFilterClass, FbxUserNotification.EOutputSource pSrc, bool pNoDetail) : this(examplePINVOKE.new_FbxUserNotificationFilteredIterator__SWIG_0(FbxUserNotification.getCPtr(pAccumulator), pFilterClass, (int)pSrc, pNoDetail), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxUserNotificationFilteredIterator(FbxUserNotification pAccumulator, int pFilterClass, FbxUserNotification.EOutputSource pSrc) : this(examplePINVOKE.new_FbxUserNotificationFilteredIterator__SWIG_1(FbxUserNotification.getCPtr(pAccumulator), pFilterClass, (int)pSrc), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxUserNotificationFilteredIterator(FbxUserNotification pAccumulator, int pFilterClass) : this(examplePINVOKE.new_FbxUserNotificationFilteredIterator__SWIG_2(FbxUserNotification.getCPtr(pAccumulator), pFilterClass), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetNbItems() {
    int ret = examplePINVOKE.FbxUserNotificationFilteredIterator_GetNbItems(swigCPtr);
    return ret;
  }

  public void Reset() {
    examplePINVOKE.FbxUserNotificationFilteredIterator_Reset(swigCPtr);
  }

  public FbxAccumulatorEntry First() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxUserNotificationFilteredIterator_First(swigCPtr);
    FbxAccumulatorEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAccumulatorEntry(cPtr, false);
    return ret;
  }

  public FbxAccumulatorEntry Previous() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxUserNotificationFilteredIterator_Previous(swigCPtr);
    FbxAccumulatorEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAccumulatorEntry(cPtr, false);
    return ret;
  }

  public FbxAccumulatorEntry Next() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxUserNotificationFilteredIterator_Next(swigCPtr);
    FbxAccumulatorEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAccumulatorEntry(cPtr, false);
    return ret;
  }

}

}
