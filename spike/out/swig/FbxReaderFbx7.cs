//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxReaderFbx7 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxReaderFbx7(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxReaderFbx7 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxReaderFbx7() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxReaderFbx7(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxReaderFbx7(FbxManager pManager, FbxImporter pImporter, int pID, FbxStatus pStatus) : this(examplePINVOKE.new_FbxReaderFbx7(FbxManager.getCPtr(pManager), FbxImporter.getCPtr(pImporter), pID, FbxStatus.getCPtr(pStatus)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool FileOpen(string pFileName, SWIGTYPE_p_EFileOpenSpecialFlags pFlags) {
    bool ret = examplePINVOKE.FbxReaderFbx7_FileOpen__SWIG_0(swigCPtr, pFileName, SWIGTYPE_p_EFileOpenSpecialFlags.getCPtr(pFlags));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool FileOpen(string pFileName) {
    bool ret = examplePINVOKE.FbxReaderFbx7_FileOpen__SWIG_1(swigCPtr, pFileName);
    return ret;
  }

  public virtual bool FileOpen(FbxFile pFile) {
    bool ret = examplePINVOKE.FbxReaderFbx7_FileOpen__SWIG_2(swigCPtr, FbxFile.getCPtr(pFile));
    return ret;
  }

  public virtual bool FileOpen(FbxStream pStream, SWIGTYPE_p_void pStreamData) {
    bool ret = examplePINVOKE.FbxReaderFbx7_FileOpen__SWIG_3(swigCPtr, FbxStream.getCPtr(pStream), SWIGTYPE_p_void.getCPtr(pStreamData));
    return ret;
  }

  public virtual bool FileClose() {
    bool ret = examplePINVOKE.FbxReaderFbx7_FileClose(swigCPtr);
    return ret;
  }

  public virtual bool IsFileOpen() {
    bool ret = examplePINVOKE.FbxReaderFbx7_IsFileOpen(swigCPtr);
    return ret;
  }

  public FbxReaderFbx7.EImportMode GetImportMode() {
    FbxReaderFbx7.EImportMode ret = (FbxReaderFbx7.EImportMode)examplePINVOKE.FbxReaderFbx7_GetImportMode(swigCPtr);
    return ret;
  }

  public virtual void GetVersion(SWIGTYPE_p_int pMajor, SWIGTYPE_p_int pMinor, SWIGTYPE_p_int pRevision) {
    examplePINVOKE.FbxReaderFbx7_GetVersion(swigCPtr, SWIGTYPE_p_int.getCPtr(pMajor), SWIGTYPE_p_int.getCPtr(pMinor), SWIGTYPE_p_int.getCPtr(pRevision));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool GetAxisInfo(FbxAxisSystem pAxisSystem, FbxSystemUnit pSystemUnits) {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetAxisInfo(swigCPtr, FbxAxisSystem.getCPtr(pAxisSystem), FbxSystemUnit.getCPtr(pSystemUnits));
    return ret;
  }

  public virtual bool GetFrameRate(SWIGTYPE_p_FbxTime__EMode pTimeMode) {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetFrameRate(swigCPtr, SWIGTYPE_p_FbxTime__EMode.getCPtr(pTimeMode));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool GetStatistics(FbxStatistics pStats) {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetStatistics(swigCPtr, FbxStatistics.getCPtr(pStats));
    return ret;
  }

  public virtual bool GetReadOptions(bool pParseFileAsNeeded) {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetReadOptions__SWIG_0(swigCPtr, pParseFileAsNeeded);
    return ret;
  }

  public virtual bool GetReadOptions() {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetReadOptions__SWIG_1(swigCPtr);
    return ret;
  }

  public virtual bool Read(FbxDocument pDocument) {
    bool ret = examplePINVOKE.FbxReaderFbx7_Read__SWIG_0(swigCPtr, FbxDocument.getCPtr(pDocument));
    return ret;
  }

  public virtual void PluginReadParameters(FbxObject pParams) {
    examplePINVOKE.FbxReaderFbx7_PluginReadParameters(swigCPtr, FbxObject.getCPtr(pParams));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool GetReadOptions(FbxIO pFbx, bool pParseFileAsNeeded) {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetReadOptions__SWIG_2(swigCPtr, FbxIO.getCPtr(pFbx), pParseFileAsNeeded);
    return ret;
  }

  public virtual bool GetReadOptions(FbxIO pFbx) {
    bool ret = examplePINVOKE.FbxReaderFbx7_GetReadOptions__SWIG_3(swigCPtr, FbxIO.getCPtr(pFbx));
    return ret;
  }

  public virtual bool Read(FbxDocument pDocument, FbxIO pFbx) {
    bool ret = examplePINVOKE.FbxReaderFbx7_Read__SWIG_1(swigCPtr, FbxDocument.getCPtr(pDocument), FbxIO.getCPtr(pFbx));
    return ret;
  }

  public virtual FbxDocumentInfo GetSceneInfo() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxReaderFbx7_GetSceneInfo(swigCPtr);
    FbxDocumentInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDocumentInfo(cPtr, false);
    return ret;
  }

  public virtual SWIGTYPE_p_FbxArrayT_FbxTakeInfo_p_t GetTakeInfo() {
    global::System.IntPtr cPtr = examplePINVOKE.FbxReaderFbx7_GetTakeInfo(swigCPtr);
    SWIGTYPE_p_FbxArrayT_FbxTakeInfo_p_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxArrayT_FbxTakeInfo_p_t(cPtr, false);
    return ret;
  }

  public virtual void SetProgressHandler(FbxProgress pProgress) {
    examplePINVOKE.FbxReaderFbx7_SetProgressHandler(swigCPtr, FbxProgress.getCPtr(pProgress));
  }

  public virtual void SetEmbeddingExtractionFolder(string pExtractFolder) {
    examplePINVOKE.FbxReaderFbx7_SetEmbeddingExtractionFolder(swigCPtr, pExtractFolder);
  }

  public virtual bool SupportsStreams() {
    bool ret = examplePINVOKE.FbxReaderFbx7_SupportsStreams(swigCPtr);
    return ret;
  }

  public enum EImportMode {
    eASCII,
    eBINARY,
    eENCRYPTED
  }

}

}
