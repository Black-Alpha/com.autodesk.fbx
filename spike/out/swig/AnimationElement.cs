//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class AnimationElement : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AnimationElement(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AnimationElement obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AnimationElement() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_AnimationElement(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public AnimationElement() : this(examplePINVOKE.new_AnimationElement(), true) {
  }

  public int GetChannelCount() {
    int ret = examplePINVOKE.AnimationElement_GetChannelCount(swigCPtr);
    return ret;
  }

  public void FromCOLLADA(SWIGTYPE_p_xmlNode pElement, SWIGTYPE_p_FbxMapT_FbxString_xmlNode_p_FbxLessCompareT_FbxString_t_FbxBaseAllocator_t pSourceElements) {
    examplePINVOKE.AnimationElement_FromCOLLADA(swigCPtr, SWIGTYPE_p_xmlNode.getCPtr(pElement), SWIGTYPE_p_FbxMapT_FbxString_xmlNode_p_FbxLessCompareT_FbxString_t_FbxBaseAllocator_t.getCPtr(pSourceElements));
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public void FromFBX(FbxAnimCurve pCurve, double pUnitConversion) {
    examplePINVOKE.AnimationElement_FromFBX__SWIG_0(swigCPtr, FbxAnimCurve.getCPtr(pCurve), pUnitConversion);
  }

  public void FromFBX(FbxAnimCurve pCurve) {
    examplePINVOKE.AnimationElement_FromFBX__SWIG_1(swigCPtr, FbxAnimCurve.getCPtr(pCurve));
  }

  public void ToFBX(FbxAnimCurve pFBXCurve, int pChannelIndex, double pUnitConversion) {
    examplePINVOKE.AnimationElement_ToFBX__SWIG_0(swigCPtr, FbxAnimCurve.getCPtr(pFBXCurve), pChannelIndex, pUnitConversion);
  }

  public void ToFBX(FbxAnimCurve pFBXCurve, int pChannelIndex) {
    examplePINVOKE.AnimationElement_ToFBX__SWIG_1(swigCPtr, FbxAnimCurve.getCPtr(pFBXCurve), pChannelIndex);
  }

  public void ToFBX(FbxNode pFBXNode, FbxAnimLayer pAnimLayer, double pUnitConversion) {
    examplePINVOKE.AnimationElement_ToFBX__SWIG_2(swigCPtr, FbxNode.getCPtr(pFBXNode), FbxAnimLayer.getCPtr(pAnimLayer), pUnitConversion);
  }

  public void ToFBX(FbxNode pFBXNode, FbxAnimLayer pAnimLayer) {
    examplePINVOKE.AnimationElement_ToFBX__SWIG_3(swigCPtr, FbxNode.getCPtr(pFBXNode), FbxAnimLayer.getCPtr(pAnimLayer));
  }

  public void ToCOLLADA(SWIGTYPE_p_xmlNode pAnimationLibrary, string pNodeID, string pAttributeSID) {
    examplePINVOKE.AnimationElement_ToCOLLADA(swigCPtr, SWIGTYPE_p_xmlNode.getCPtr(pAnimationLibrary), pNodeID, pAttributeSID);
  }

}

}
