//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxProcessorXRefCopy : FbxProcessor {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxProcessorXRefCopy(global::System.IntPtr cPtr, bool cMemoryOwn) : base(examplePINVOKE.FbxProcessorXRefCopy_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxProcessorXRefCopy obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      examplePINVOKE.FbxProcessorXRefCopy_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(examplePINVOKE.FbxProcessorXRefCopy_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxProcessorXRefCopy Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxProcessorXRefCopy ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProcessorXRefCopy(cPtr, false);
    return ret;
  }

  public new static FbxProcessorXRefCopy Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxProcessorXRefCopy ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProcessorXRefCopy(cPtr, false);
    return ret;
  }

  public class MissingUrlHandler : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal MissingUrlHandler(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MissingUrlHandler obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~MissingUrlHandler() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            examplePINVOKE.delete_FbxProcessorXRefCopy_MissingUrlHandler(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public virtual void MissingUrl(FbxString pUrl, FbxProperty arg1) {
      examplePINVOKE.FbxProcessorXRefCopy_MissingUrlHandler_MissingUrl(swigCPtr, FbxString.getCPtr(pUrl), FbxProperty.getCPtr(arg1));
      if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    }
  
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxString_t OutputDirectory {
    set {
      examplePINVOKE.FbxProcessorXRefCopy_OutputDirectory_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxString_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_OutputDirectory_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxString_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxString_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t UpdateProperties {
    set {
      examplePINVOKE.FbxProcessorXRefCopy_UpdateProperties_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_UpdateProperties_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t TrackUpdatedProperties {
    set {
      examplePINVOKE.FbxProcessorXRefCopy_TrackUpdatedProperties_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_TrackUpdatedProperties_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t ForceCopy {
    set {
      examplePINVOKE.FbxProcessorXRefCopy_ForceCopy_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_ForceCopy_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_bool_t CopyFileTimes {
    set {
      examplePINVOKE.FbxProcessorXRefCopy_CopyFileTimes_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_bool_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_CopyFileTimes_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_bool_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_bool_t(cPtr, false);
      return ret;
    } 
  }

  public class PropertyUpdate : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal PropertyUpdate(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PropertyUpdate obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~PropertyUpdate() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            examplePINVOKE.delete_FbxProcessorXRefCopy_PropertyUpdate(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public FbxProperty mProperty {
      set {
        examplePINVOKE.FbxProcessorXRefCopy_PropertyUpdate_mProperty_set(swigCPtr, FbxProperty.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_PropertyUpdate_mProperty_get(swigCPtr);
        FbxProperty ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProperty(cPtr, false);
        return ret;
      } 
    }
  
    public FbxString mOriginalValue {
      set {
        examplePINVOKE.FbxProcessorXRefCopy_PropertyUpdate_mOriginalValue_set(swigCPtr, FbxString.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_PropertyUpdate_mOriginalValue_get(swigCPtr);
        FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
        return ret;
      } 
    }
  
    public PropertyUpdate() : this(examplePINVOKE.new_FbxProcessorXRefCopy_PropertyUpdate__SWIG_0(), true) {
    }
  
    public PropertyUpdate(FbxProperty pProp, FbxString pVal) : this(examplePINVOKE.new_FbxProcessorXRefCopy_PropertyUpdate__SWIG_1(FbxProperty.getCPtr(pProp), FbxString.getCPtr(pVal)), true) {
      if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    }
  
  }

  public SWIGTYPE_p_FbxMapT_FbxObject_p_FbxSetT_FbxProcessorXRefCopy__PropertyUpdate_t_t GetUpdatedProperties() {
    SWIGTYPE_p_FbxMapT_FbxObject_p_FbxSetT_FbxProcessorXRefCopy__PropertyUpdate_t_t ret = new SWIGTYPE_p_FbxMapT_FbxObject_p_FbxSetT_FbxProcessorXRefCopy__PropertyUpdate_t_t(examplePINVOKE.FbxProcessorXRefCopy_GetUpdatedProperties(swigCPtr), false);
    return ret;
  }

  public void RevertPropertyChanges() {
    examplePINVOKE.FbxProcessorXRefCopy_RevertPropertyChanges(swigCPtr);
  }

  public class AutoRevertPropertyChanges : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal AutoRevertPropertyChanges(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AutoRevertPropertyChanges obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~AutoRevertPropertyChanges() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            examplePINVOKE.delete_FbxProcessorXRefCopy_AutoRevertPropertyChanges(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public AutoRevertPropertyChanges(FbxProcessorXRefCopy pCopy) : this(examplePINVOKE.new_FbxProcessorXRefCopy_AutoRevertPropertyChanges(FbxProcessorXRefCopy.getCPtr(pCopy)), true) {
    }
  
    public FbxProcessorXRefCopy mXRefCopy {
      set {
        examplePINVOKE.FbxProcessorXRefCopy_AutoRevertPropertyChanges_mXRefCopy_set(swigCPtr, FbxProcessorXRefCopy.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = examplePINVOKE.FbxProcessorXRefCopy_AutoRevertPropertyChanges_mXRefCopy_get(swigCPtr);
        FbxProcessorXRefCopy ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxProcessorXRefCopy(cPtr, false);
        return ret;
      } 
    }
  
  }

}

}
