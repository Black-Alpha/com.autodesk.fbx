//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FbxSdk {

public class FbxDualQuaternion : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxDualQuaternion(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxDualQuaternion obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxDualQuaternion() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          examplePINVOKE.delete_FbxDualQuaternion(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxDualQuaternion() : this(examplePINVOKE.new_FbxDualQuaternion__SWIG_0(), true) {
  }

  public FbxDualQuaternion(FbxQuaternion pV1, FbxQuaternion pV2) : this(examplePINVOKE.new_FbxDualQuaternion__SWIG_1(FbxQuaternion.getCPtr(pV1), FbxQuaternion.getCPtr(pV2)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxDualQuaternion(FbxDualQuaternion pV) : this(examplePINVOKE.new_FbxDualQuaternion__SWIG_2(FbxDualQuaternion.getCPtr(pV)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxDualQuaternion(FbxQuaternion pRotation, FbxVector4 pTranslation) : this(examplePINVOKE.new_FbxDualQuaternion__SWIG_3(FbxQuaternion.getCPtr(pRotation), FbxVector4.getCPtr(pTranslation)), true) {
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxDualQuaternion(double pX1, double pY1, double pZ1, double pW1, double pX2, double pY2, double pZ2, double pW2) : this(examplePINVOKE.new_FbxDualQuaternion__SWIG_4(pX1, pY1, pZ1, pW1, pX2, pY2, pZ2, pW2), true) {
  }

  public void Set(double pX1, double pY1, double pZ1, double pW1, double pX2, double pY2, double pZ2, double pW2) {
    examplePINVOKE.FbxDualQuaternion_Set(swigCPtr, pX1, pY1, pZ1, pW1, pX2, pY2, pZ2, pW2);
  }

  public FbxQuaternion GetFirstQuaternion() {
    FbxQuaternion ret = new FbxQuaternion(examplePINVOKE.FbxDualQuaternion_GetFirstQuaternion__SWIG_0(swigCPtr), false);
    return ret;
  }

  public FbxQuaternion GetSecondQuaternion() {
    FbxQuaternion ret = new FbxQuaternion(examplePINVOKE.FbxDualQuaternion_GetSecondQuaternion__SWIG_0(swigCPtr), false);
    return ret;
  }

  public FbxQuaternion GetRotation() {
    FbxQuaternion ret = new FbxQuaternion(examplePINVOKE.FbxDualQuaternion_GetRotation(swigCPtr), true);
    return ret;
  }

  public FbxVector4 GetTranslation() {
    FbxVector4 ret = new FbxVector4(examplePINVOKE.FbxDualQuaternion_GetTranslation(swigCPtr), true);
    return ret;
  }

  public FbxDualQuaternion Product(FbxDualQuaternion pDualQuaternion) {
    FbxDualQuaternion ret = new FbxDualQuaternion(examplePINVOKE.FbxDualQuaternion_Product(swigCPtr, FbxDualQuaternion.getCPtr(pDualQuaternion)), true);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Normalize() {
    examplePINVOKE.FbxDualQuaternion_Normalize(swigCPtr);
  }

  public void Inverse() {
    examplePINVOKE.FbxDualQuaternion_Inverse(swigCPtr);
  }

  public FbxVector4 Deform(FbxVector4 pPoint) {
    FbxVector4 ret = new FbxVector4(examplePINVOKE.FbxDualQuaternion_Deform(swigCPtr, FbxVector4.getCPtr(pPoint)), true);
    if (examplePINVOKE.SWIGPendingException.Pending) throw examplePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Conjugate() {
    examplePINVOKE.FbxDualQuaternion_Conjugate(swigCPtr);
  }

  public void Dual() {
    examplePINVOKE.FbxDualQuaternion_Dual(swigCPtr);
  }

  public void DualConjugate() {
    examplePINVOKE.FbxDualQuaternion_DualConjugate(swigCPtr);
  }

}

}
